generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model admins {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name              String    @db.VarChar(255)
  email             String    @unique(map: "admins_email_unique") @db.VarChar(255)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  send_notification Json?
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
  imports           imports[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model advertisements {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  position    String    @db.VarChar(255)
  name        String    @db.VarChar(255)
  sort        Int       @default(0)
  image       String    @db.VarChar(255)
  content     String    @db.LongText
  link_type   String    @db.VarChar(255)
  link        String?   @db.VarChar(255)
  enabled     Boolean   @default(true)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  hover_image String?   @db.VarChar(255)

  @@index([enabled], map: "advertisements_enabled_index")
  @@index([link_type], map: "advertisements_link_type_index")
  @@index([position], map: "advertisements_position_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_feature_professions {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  assessment_id BigInt    @default(0) @db.UnsignedBigInt
  code          String    @default("") @db.VarChar(5)
  sub_code      String    @default("") @db.VarChar(5)
  description   String?   @db.TinyText
  professions   Json?
  job_positions Json?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)

  @@index([assessment_id], map: "idx_assessment_id")
  @@index([code], map: "idx_code")
  @@index([sub_code], map: "idx_sub_code")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_features {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  assessment_id BigInt    @default(0) @db.UnsignedBigInt
  code          String    @default("") @db.VarChar(5)
  name          String    @default("") @db.VarChar(255)
  description   String?   @db.Text
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)

  @@index([assessment_id], map: "idx_assessment_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_question_options {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  question_id   BigInt    @default(0) @db.UnsignedBigInt
  option        String    @default("") @db.VarChar(255)
  feature_score Json?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)

  @@index([question_id], map: "idx_question_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_questions {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  assessment_id BigInt    @default(0) @db.UnsignedBigInt
  type          String    @default("") @db.VarChar(30)
  title         String?   @db.Text
  score         Int?      @default(0)
  sort          Int       @default(0)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)

  @@index([assessment_id], map: "idx_assessment_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_submit_receivers {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  assessment_id        BigInt    @default(0) @db.UnsignedBigInt
  assessment_submit_id BigInt    @default(0) @db.UnsignedBigInt
  email                String    @default("") @db.VarChar(255)
  receiver             String    @default("") @db.VarChar(255)
  receiver_contact     String    @default("") @db.VarChar(255)
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)
  deleted_at           DateTime? @db.Timestamp(0)

  @@index([assessment_id], map: "idx_assessment_submit_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessment_submits {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id       BigInt    @default(0) @db.UnsignedBigInt
  assessment_id BigInt    @default(0) @db.UnsignedBigInt
  answers       String?   @db.Text
  conclusion    Json?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)

  @@index([assessment_id], map: "idx_assessment_id")
  @@index([user_id], map: "idx_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assessments {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name        String    @default("") @db.VarChar(255)
  description String?   @db.Text
  code        String    @default("") @db.VarChar(255)
  view_num    Int       @default(0)
  start_num   Int       @default(0)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)

  @@index([code], map: "idx_code")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model balances {
  id                               BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                          BigInt               @db.UnsignedBigInt
  order_id                         BigInt?              @db.UnsignedBigInt
  withdrawal_request_id            BigInt?              @db.UnsignedBigInt
  invited_id                       BigInt?              @db.UnsignedBigInt
  type                             String               @db.VarChar(255)
  before_balance                   Decimal              @db.Decimal(10, 2)
  amount                           Decimal              @db.Decimal(10, 2)
  balance                          Decimal              @db.Decimal(10, 2)
  created_at                       DateTime?            @db.Timestamp(0)
  updated_at                       DateTime?            @db.Timestamp(0)
  users_balances_invited_idTousers users?               @relation("balances_invited_idTousers", fields: [invited_id], references: [id], onUpdate: NoAction, map: "balances_invited_id_foreign")
  orders                           orders?              @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "balances_order_id_foreign")
  users_balances_user_idTousers    users                @relation("balances_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "balances_user_id_foreign")
  withdrawal_requests              withdrawal_requests? @relation(fields: [withdrawal_request_id], references: [id], onUpdate: NoAction, map: "balances_withdrawal_request_id_foreign")

  @@index([invited_id], map: "balances_invited_id_foreign")
  @@index([order_id], map: "balances_order_id_foreign")
  @@index([type], map: "balances_type_index")
  @@index([user_id], map: "balances_user_id_foreign")
  @@index([withdrawal_request_id], map: "balances_withdrawal_request_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model blogs {
  id           BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  category_id  BigInt     @db.UnsignedBigInt
  title        String     @db.VarChar(255)
  description  String     @db.Text
  content      String     @db.LongText
  cover        String?    @db.VarChar(255)
  status       String     @default("draft") @db.VarChar(255)
  published_at DateTime?  @db.Timestamp(0)
  created_at   DateTime?  @db.Timestamp(0)
  updated_at   DateTime?  @db.Timestamp(0)
  categories   categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "blogs_category_id_foreign")

  @@index([category_id], map: "blogs_category_id_foreign")
  @@index([status], map: "blogs_status_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model categories {
  id               BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  parent_id        BigInt?      @db.UnsignedBigInt
  name             String       @db.VarChar(255)
  type             String       @db.VarChar(255)
  created_at       DateTime?    @db.Timestamp(0)
  updated_at       DateTime?    @db.Timestamp(0)
  blogs            blogs[]
  categories       categories?  @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "categories_parent_id_foreign")
  other_categories categories[] @relation("categoriesTocategories")

  @@index([parent_id], map: "categories_parent_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model channels {
  id                             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user1_id                       BigInt    @db.UnsignedBigInt
  user2_id                       BigInt    @db.UnsignedBigInt
  key                            String    @db.VarChar(255)
  current_job_id                 BigInt    @default(0) @db.UnsignedBigInt
  created_at                     DateTime? @db.Timestamp(0)
  updated_at                     DateTime? @db.Timestamp(0)
  users_channels_user1_idTousers users     @relation("channels_user1_idTousers", fields: [user1_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "channels_user1_id_foreign")
  users_channels_user2_idTousers users     @relation("channels_user2_idTousers", fields: [user2_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "channels_user2_id_foreign")

  @@index([user1_id], map: "channels_user1_id_foreign")
  @@index([user2_id], map: "channels_user2_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classic_course_features {
  id                BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  classic_course_id BigInt          @db.UnsignedBigInt
  image             String          @db.VarChar(255)
  title             String?         @db.VarChar(255)
  description       String          @db.Text
  sort              Int
  created_at        DateTime?       @db.Timestamp(0)
  updated_at        DateTime?       @db.Timestamp(0)
  classic_courses   classic_courses @relation(fields: [classic_course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "classic_course_features_classic_course_id_foreign")

  @@index([classic_course_id], map: "classic_course_features_classic_course_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classic_course_mentor {
  classic_course_id BigInt          @db.UnsignedBigInt
  mentor_id         BigInt          @db.UnsignedBigInt
  sort              Int             @default(0)
  classic_courses   classic_courses @relation(fields: [classic_course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "classic_course_mentor_classic_course_id_foreign")
  mentors           mentors         @relation(fields: [mentor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "classic_course_mentor_mentor_id_foreign")

  @@unique([classic_course_id, mentor_id], map: "classic_course_mentor_classic_course_id_mentor_id_unique")
  @@index([mentor_id], map: "classic_course_mentor_mentor_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classic_course_strengths {
  id                BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  classic_course_id BigInt          @db.UnsignedBigInt
  image             String          @db.VarChar(255)
  title             String?         @db.VarChar(255)
  description       String          @db.Text
  sort              Int
  created_at        DateTime?       @db.Timestamp(0)
  updated_at        DateTime?       @db.Timestamp(0)
  classic_courses   classic_courses @relation(fields: [classic_course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "classic_course_strengths_classic_course_id_foreign")

  @@index([classic_course_id], map: "classic_course_strengths_classic_course_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classic_courses {
  id                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  industry_id              BigInt?                    @db.UnsignedBigInt
  job_position_id          BigInt                     @default(0)
  started_at               DateTime                   @db.Timestamp(0)
  ended_at                 DateTime                   @db.Timestamp(0)
  original_price           Decimal                    @db.Decimal(10, 2)
  discount_price           Decimal?                   @db.Decimal(10, 2)
  title                    String                     @db.VarChar(255)
  short_description        String?                    @db.Text
  description              String?                    @db.LongText
  views                    BigInt                     @default(0) @db.UnsignedBigInt
  video                    String?                    @db.VarChar(255)
  cover                    String                     @db.VarChar(255)
  status                   String                     @db.VarChar(255)
  link                     String?                    @db.VarChar(255)
  job_description          String?                    @db.Text
  gain                     String?                    @db.Text
  published_at             DateTime?                  @db.Timestamp(0)
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  type                     String                     @default("course") @db.VarChar(255)
  enrollment_limit         Int?                       @db.UnsignedInt
  company_id               BigInt?                    @db.UnsignedBigInt
  classic_course_features  classic_course_features[]
  classic_course_mentor    classic_course_mentor[]
  classic_course_strengths classic_course_strengths[]
  companies                companies?                 @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "classic_courses_company_id_foreign")
  industries               industries?                @relation(fields: [industry_id], references: [id], onUpdate: NoAction, map: "classic_courses_industry_id_foreign")
  orders                   orders[]

  @@index([company_id], map: "classic_courses_company_id_foreign")
  @@index([industry_id], map: "classic_courses_industry_id_foreign")
  @@index([title], map: "classic_courses_title_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model companies {
  id                       BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                  BigInt                 @db.UnsignedBigInt
  industry_id              BigInt?                @db.UnsignedBigInt
  type                     String                 @default("common") @db.VarChar(20)
  logo                     String                 @db.VarChar(255)
  cover                    String?                @db.VarChar(255)
  name                     String                 @db.VarChar(255)
  abbreviation             String                 @default("") @db.VarChar(50)
  email                    String                 @db.VarChar(255)
  abn                      String?                @db.VarChar(255)
  website                  String?                @db.VarChar(255)
  office_number            String?                @db.VarChar(255)
  office_space             String?                @db.VarChar(255)
  size                     String?                @db.VarChar(255)
  city                     String?                @db.VarChar(255)
  address                  String?                @db.VarChar(255)
  asic_files               Json?
  introduction             String?                @db.Text
  mission                  String?                @db.Text
  long_term_recruit_intern Boolean                @default(false)
  working_visa             Boolean                @default(false)
  is_top                   Boolean                @default(false)
  sort                     Int                    @default(0) @db.UnsignedInt
  is_recommend             Boolean                @default(false)
  finish_percent           Int                    @default(0)
  created_at               DateTime?              @db.Timestamp(0)
  updated_at               DateTime?              @db.Timestamp(0)
  profile                  String?                @db.Text
  deleted_at               DateTime?              @db.Timestamp(0)
  classic_courses          classic_courses[]
  industries               industries?            @relation(fields: [industry_id], references: [id], onUpdate: NoAction, map: "companies_industry_id_foreign")
  users                    users                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "companies_user_id_foreign")
  contacts                 contacts[]
  enterprise_expresses     enterprise_expresses[]
  interviews               interviews[]
  jobs                     jobs[]
  mentors                  mentors[]
  resume_deliveries        resume_deliveries[]

  @@index([abn], map: "companies_abn_index")
  @@index([city], map: "companies_city_index")
  @@index([industry_id], map: "companies_industry_id_foreign")
  @@index([name], map: "companies_name_index")
  @@index([office_space], map: "companies_office_space_index")
  @@index([size], map: "companies_size_index")
  @@index([user_id], map: "companies_user_id_foreign")
  @@index([email], map: "idx_email")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company_applications {
  id                       BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  industry_id              BigInt?     @db.UnsignedBigInt
  logo                     String      @db.VarChar(255)
  cover                    String?     @db.VarChar(255)
  name                     String      @db.VarChar(255)
  email                    String      @db.VarChar(255)
  abn                      String?     @db.VarChar(255)
  website                  String?     @db.VarChar(255)
  office_number            String?     @db.VarChar(255)
  office_space             String?     @db.VarChar(255)
  size                     String?     @db.VarChar(255)
  city                     String?     @db.VarChar(255)
  address                  String?     @db.VarChar(255)
  mission                  String?     @db.Text
  long_term_recruit_intern Boolean     @default(false)
  working_visa             Boolean     @default(false)
  asic_files               Json
  status                   String      @db.VarChar(255)
  reason                   String?     @db.Text
  jobs                     Json?
  contacts                 String?     @db.Text
  created_at               DateTime?   @db.Timestamp(0)
  updated_at               DateTime?   @db.Timestamp(0)
  deleted_at               DateTime?   @db.Timestamp(0)
  abbreviation             String      @default("") @db.VarChar(50)
  industries               industries? @relation(fields: [industry_id], references: [id], onUpdate: NoAction, map: "company_applications_industry_id_foreign")

  @@index([industry_id], map: "company_applications_industry_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model company_contacts {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  company_id BigInt    @default(0) @db.UnsignedBigInt
  name       String    @default("") @db.VarChar(20)
  avatar     String    @default("") @db.VarChar(255)
  gender     String    @default("") @db.VarChar(10)
  position   String    @default("") @db.VarChar(255)
  email      String    @default("") @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model contacts {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  company_id BigInt    @db.UnsignedBigInt
  job_id     BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contacts_company_id_foreign")
  jobs       jobs      @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contacts_job_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "contacts_user_id_foreign")

  @@index([company_id], map: "contacts_company_id_foreign")
  @@index([job_id], map: "contacts_job_id_foreign")
  @@index([user_id], map: "contacts_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model distribution_settings {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @unique(map: "distribution_settings_user_id_unique") @db.UnsignedBigInt
  status          String    @default("reviewing") @db.VarChar(255)
  discount_rate   Decimal?  @db.Decimal(4, 3)
  commission_rate Decimal?  @db.Decimal(4, 3)
  code            String?   @unique(map: "distribution_settings_code_unique") @db.VarChar(255)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "distribution_settings_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model email_subscribers {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  email      String    @unique(map: "email_subscribers_email_unique") @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  enabled    Boolean   @default(true)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model enrollments {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @db.UnsignedBigInt
  enrollable_type String    @db.VarChar(255)
  enrollable_id   BigInt    @db.UnsignedBigInt
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enrollments_user_id_foreign")

  @@index([enrollable_type, enrollable_id], map: "enrollments_enrollable_type_enrollable_id_index")
  @@index([user_id], map: "enrollments_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model enterprise_expresses {
  id                 BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  company_id         BigInt      @db.UnsignedBigInt
  mentor_id          BigInt?     @db.UnsignedBigInt
  hire_count         Int         @db.UnsignedInt
  registration_count Int         @db.UnsignedInt
  cover              String      @db.VarChar(255)
  title              String      @db.VarChar(255)
  description        String      @db.LongText
  city               String      @db.VarChar(255)
  status             String      @db.VarChar(255)
  link               String      @db.VarChar(255)
  started_at         DateTime    @db.Timestamp(0)
  ended_at           DateTime    @db.Timestamp(0)
  published_at       DateTime?   @db.Timestamp(0)
  created_at         DateTime?   @db.Timestamp(0)
  updated_at         DateTime?   @db.Timestamp(0)
  employer_name      String?     @db.VarChar(255)
  industry_id        BigInt?     @db.UnsignedBigInt
  companies          companies   @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enterprise_expresses_company_id_foreign")
  industries         industries? @relation(fields: [industry_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enterprise_expresses_industry_id_foreign")
  mentors            mentors?    @relation(fields: [mentor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "enterprise_expresses_mentor_id_foreign")

  @@index([city], map: "enterprise_expresses_city_index")
  @@index([company_id], map: "enterprise_expresses_company_id_foreign")
  @@index([industry_id], map: "enterprise_expresses_industry_id_foreign")
  @@index([mentor_id], map: "enterprise_expresses_mentor_id_foreign")
  @@index([status], map: "enterprise_expresses_status_index")
  @@index([title], map: "enterprise_expresses_title_index")
}

model failed_import_rows {
  id               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  data             Json
  import_id        BigInt    @db.UnsignedBigInt
  validation_error String?   @db.Text
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  imports          imports   @relation(fields: [import_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "failed_import_rows_import_id_foreign")

  @@index([import_id], map: "failed_import_rows_import_id_foreign")
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model favorites {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id           BigInt    @db.UnsignedBigInt
  favoriteable_type String    @db.VarChar(255)
  favoriteable_id   BigInt    @db.UnsignedBigInt
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@index([favoriteable_type, favoriteable_id], map: "favorites_favoriteable_type_favoriteable_id_index")
  @@index([user_id], map: "favorites_user_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model files {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt?   @db.UnsignedBigInt
  admin_id   BigInt?   @db.UnsignedBigInt
  path       String    @unique(map: "files_path_unique") @db.VarChar(255)
  type       String    @db.VarChar(255)
  name       String    @db.VarChar(255)
  properties Json?
  mime       String    @default("image") @db.VarChar(30)
  disk       String    @default("public") @db.VarChar(20)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model hiring_results {
  id                           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  hired_user_id                BigInt?   @db.UnsignedBigInt
  company_id                   BigInt?   @db.UnsignedBigInt
  job_id                       BigInt?   @db.UnsignedBigInt
  candidates                   Json?
  hiring_advantages_summary    String?   @db.LongText
  job_summary                  String?   @db.LongText
  hiring_advantages_evaluation String?   @db.LongText
  evaluation_at                DateTime? @db.Timestamp(0)
  created_at                   DateTime? @db.Timestamp(0)
  updated_at                   DateTime? @db.Timestamp(0)
  job_pdf                      Json?
  resume_pdf                   Json?
  status                       String    @default("draft") @db.VarChar(255)
  invoice_date                 DateTime? @db.Timestamp(0)
  invoice_due_date             DateTime? @db.Timestamp(0)
  invoice_number               String?   @db.VarChar(255)
  advertise                    Json?
  invoice_pdf                  Json?
  ad_publish_at                DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model immigrations {
  id                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  occupations             String    @db.VarChar(255)
  anzsco_code             String    @db.VarChar(255)
  anzsco_group            String    @db.VarChar(255)
  anzsco_last_2_digit     String    @db.VarChar(255)
  caveats                 String    @db.VarChar(255)
  assessing_authority     String    @db.VarChar(255)
  income_description      String?   @db.Text
  mltssl_list             Boolean   @default(false)
  stsol_list              Boolean   @default(false)
  rol_list                Boolean   @default(false)
  pmsol_list              Boolean   @default(false)
  tss                     Boolean   @default(false)
  ens_sc186               Boolean   @default(false)
  rsms_sc187_transitional Boolean   @default(false)
  sc_189                  Boolean   @default(false)
  sc_190                  Boolean   @default(false)
  sc_491_st_nominated     Boolean   @default(false)
  sc_491_family_sponsored Boolean   @default(false)
  sc_494                  Boolean   @default(false)
  sc_485                  Boolean   @default(false)
  sc_407                  Boolean   @default(false)
  act_190                 Boolean   @default(false)
  act_491                 Boolean   @default(false)
  nsw_190                 Boolean   @default(false)
  nsw_491                 Boolean   @default(false)
  nt_190                  Boolean   @default(false)
  nt_491                  Boolean   @default(false)
  qld_190                 Boolean   @default(false)
  qld_491                 Boolean   @default(false)
  sa_190                  Boolean   @default(false)
  sa_491                  Boolean   @default(false)
  tas_190                 Boolean   @default(false)
  tas_491                 Boolean   @default(false)
  vic_190                 Boolean   @default(false)
  vic_491                 Boolean   @default(false)
  wa_190                  Boolean   @default(false)
  wa_491                  Boolean   @default(false)
  created_at              DateTime? @db.Timestamp(0)
  updated_at              DateTime? @db.Timestamp(0)
  nm_482                  Boolean   @default(true)
  deleted_at              DateTime? @db.Timestamp(0)

  @@index([anzsco_code], map: "immigrations_anzsco_code_index")
  @@index([occupations], map: "immigrations_occupations_index")
}

model imports {
  id                 BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  completed_at       DateTime?            @db.Timestamp(0)
  file_name          String               @db.VarChar(255)
  file_path          String               @db.VarChar(255)
  importer           String               @db.VarChar(255)
  processed_rows     Int                  @default(0) @db.UnsignedInt
  total_rows         Int                  @db.UnsignedInt
  successful_rows    Int                  @default(0) @db.UnsignedInt
  user_id            BigInt               @db.UnsignedBigInt
  created_at         DateTime?            @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  failed_import_rows failed_import_rows[]
  admins             admins               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "imports_user_id_foreign")

  @@index([user_id], map: "imports_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model industries {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  parent_id             BigInt?                 @db.UnsignedBigInt
  name                  String                  @db.VarChar(255)
  is_top                Boolean                 @default(false)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  classic_courses       classic_courses[]
  companies             companies[]
  company_applications  company_applications[]
  enterprise_expresses  enterprise_expresses[]
  industries            industries?             @relation("industriesToindustries", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "industries_parent_id_foreign")
  other_industries      industries[]            @relation("industriesToindustries")
  user_work_experiences user_work_experiences[]
  video_courses         video_courses[]

  @@index([parent_id], map: "industries_parent_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model interviews {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  company_id BigInt    @db.UnsignedBigInt
  job_id     BigInt    @db.UnsignedBigInt
  status     String    @default("pending") @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "interviews_company_id_foreign")
  jobs       jobs      @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "interviews_job_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "interviews_user_id_foreign")

  @@index([company_id], map: "interviews_company_id_foreign")
  @@index([job_id], map: "interviews_job_id_foreign")
  @@index([status], map: "interviews_status_index")
  @@index([user_id], map: "interviews_user_id_foreign")
}

model job_batches {
  id             String  @id @db.VarChar(255)
  name           String  @db.VarChar(255)
  total_jobs     Int
  pending_jobs   Int
  failed_jobs    Int
  failed_job_ids String  @db.LongText
  options        String? @db.MediumText
  cancelled_at   Int?
  created_at     Int
  finished_at    Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model job_positions {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  parent_id             BigInt?                 @db.UnsignedBigInt
  name                  String                  @db.VarChar(255)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  deleted_at            DateTime?               @db.Timestamp(0)
  job_positions         job_positions?          @relation("job_positionsTojob_positions", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_positions_parent_id_foreign")
  other_job_positions   job_positions[]         @relation("job_positionsTojob_positions")
  jobs                  jobs[]
  user_job_expectations user_job_expectations[]

  @@index([name], map: "job_positions_name_index")
  @@index([parent_id], map: "job_positions_parent_id_foreign")
}

model job_skill {
  job_id   BigInt @db.UnsignedBigInt
  skill_id BigInt @db.UnsignedBigInt
  jobs     jobs   @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_skill_job_id_foreign")
  skills   skills @relation(fields: [skill_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "job_skill_skill_id_foreign")

  @@id([job_id, skill_id])
  @@index([skill_id], map: "job_skill_skill_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model jobs {
  id                   BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  company_id           BigInt         @db.UnsignedBigInt
  job_position_id      BigInt?        @db.UnsignedBigInt
  city                 String         @db.VarChar(255)
  address              String         @db.VarChar(255)
  job_type             String         @db.VarChar(255)
  title                String         @db.VarChar(255)
  description          String?        @db.Text
  about_you            String?        @db.Text
  about_role           String         @db.Text
  skill_and_experience String         @db.Text
  we_offer             String?        @db.Text
  published_at         DateTime       @db.Timestamp(0)
  education_background String         @db.VarChar(255)
  work_year            String         @db.VarChar(255)
  salary               String         @db.VarChar(255)
  min_salary           Int?           @db.UnsignedInt
  max_salary           Int?           @db.UnsignedInt
  visa_requirement     String         @db.VarChar(255)
  status               String         @db.VarChar(255)
  real_view            Int            @default(0)
  view_num             Int            @default(0)
  is_top               Boolean        @default(false)
  sort                 Int            @default(0) @db.UnsignedInt
  keywords             String?        @db.VarChar(255)
  attentions           Json?
  created_at           DateTime?      @db.Timestamp(0)
  updated_at           DateTime?      @db.Timestamp(0)
  deleted_at           DateTime?      @db.Timestamp(0)
  contacts             contacts[]
  interviews           interviews[]
  job_skill            job_skill[]
  companies            companies      @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "jobs_company_id_foreign")
  job_positions        job_positions? @relation(fields: [job_position_id], references: [id], onUpdate: NoAction, map: "jobs_job_position_id_foreign")

  @@index([city], map: "jobs_city_index")
  @@index([company_id], map: "jobs_company_id_foreign")
  @@index([education_background], map: "jobs_education_background_index")
  @@index([is_top], map: "jobs_is_top_index")
  @@index([job_position_id], map: "jobs_job_position_id_foreign")
  @@index([job_type], map: "jobs_job_type_index")
  @@index([published_at], map: "jobs_published_at_index")
  @@index([salary], map: "jobs_salary_index")
  @@index([status], map: "jobs_status_index")
  @@index([title], map: "jobs_title_index")
  @@index([visa_requirement], map: "jobs_visa_requirement_index")
  @@index([work_year], map: "jobs_work_year_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model medias {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  media_url     String    @default("") @db.VarChar(255)
  name          String    @default("") @db.VarChar(255)
  mime          String    @default("") @db.VarChar(255)
  relation_type String    @default("") @db.VarChar(255)
  relation_id   BigInt    @default(0) @db.UnsignedBigInt
  properties    Json?
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  deleted_at    DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentor_applications {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name         String    @db.VarChar(255)
  phone_number String    @db.VarChar(255)
  email        String    @db.VarChar(255)
  company_name String?   @db.VarChar(255)
  position     String    @db.VarChar(255)
  status       String    @default("reviewing") @db.VarChar(255)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  phone_code   String?   @db.VarChar(255)
  introduction String?   @db.Text
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentors {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  company_id            BigInt?                 @db.UnsignedBigInt
  avatar                String?                 @db.VarChar(255)
  name                  String                  @db.VarChar(255)
  phone_number          String                  @db.VarChar(255)
  email                 String                  @db.VarChar(255)
  company_name          String?                 @db.VarChar(255)
  position              String                  @db.VarChar(255)
  introduction          String?                 @db.Text
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  phone_code            String?                 @db.VarChar(255)
  short_introduction    String?                 @db.VarChar(255)
  classic_course_mentor classic_course_mentor[]
  enterprise_expresses  enterprise_expresses[]
  companies             companies?              @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mentors_company_id_foreign")
  video_courses         video_courses[]

  @@index([company_id], map: "mentors_company_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model message_reads {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @default(0) @db.UnsignedBigInt
  message_id BigInt    @default(0) @db.UnsignedBigInt
  read_at    DateTime? @db.Timestamp(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)

  @@index([user_id], map: "idx_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model messages {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title        String    @default("") @db.VarChar(255)
  content      Json?
  belong       String    @default("") @db.VarChar(255)
  send_to_role String    @default("") @db.VarChar(255)
  user_ids     Json?
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)

  @@index([send_to_role], map: "idx_send_to_role")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model meta {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  metable_type String    @default("") @db.VarChar(255)
  metable_id   String    @default("0") @db.VarChar(255)
  group        String    @default("") @db.VarChar(255)
  key          String    @default("") @db.VarChar(255)
  value        Json?
  description  String    @default("") @db.VarChar(255)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)

  @@index([metable_type, metable_id], map: "idx_metable_type_id")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model notifications {
  id              String    @id @db.Char(36)
  type            String    @db.VarChar(255)
  notifiable_type String    @db.VarChar(255)
  notifiable_id   BigInt    @db.UnsignedBigInt
  data            String    @db.Text
  read_at         DateTime? @db.Timestamp(0)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)

  @@index([notifiable_type, notifiable_id], map: "notifications_notifiable_type_notifiable_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notify_sends {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  type        String    @default("") @db.VarChar(20)
  business    String    @default("") @db.VarChar(100)
  subject_id  BigInt    @default(0) @db.UnsignedBigInt
  subject     String    @default("") @db.VarChar(100)
  status      String    @default("") @db.VarChar(20)
  notified_at DateTime? @db.DateTime(0)
  metadata    Json?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)

  @@index([subject_id, subject], map: "idx_subject_id_subject")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model orders {
  id                             BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                        BigInt           @db.UnsignedBigInt
  inviter_id                     BigInt?          @db.UnsignedBigInt
  pricing_plan_id                BigInt?          @db.UnsignedBigInt
  classic_course_id              BigInt?          @db.UnsignedBigInt
  subscription_id                BigInt?          @db.UnsignedBigInt
  order_no                       String           @unique(map: "orders_order_no_unique") @db.VarChar(255)
  amount                         Decimal          @db.Decimal(10, 2)
  type                           String           @db.VarChar(255)
  status                         String           @db.VarChar(255)
  payment_method                 String?          @db.VarChar(255)
  payment_provider               String?          @db.VarChar(255)
  paid_at                        DateTime?        @db.Timestamp(0)
  metadata                       Json?
  created_at                     DateTime?        @db.Timestamp(0)
  updated_at                     DateTime?        @db.Timestamp(0)
  deleted_at                     DateTime?        @db.Timestamp(0)
  balances                       balances[]
  classic_courses                classic_courses? @relation(fields: [classic_course_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_classic_course_id_foreign")
  users_orders_inviter_idTousers users?           @relation("orders_inviter_idTousers", fields: [inviter_id], references: [id], onUpdate: NoAction, map: "orders_inviter_id_foreign")
  pricing_plans                  pricing_plans?   @relation(fields: [pricing_plan_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_pricing_plan_id_foreign")
  subscriptions                  subscriptions?   @relation(fields: [subscription_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_subscription_id_foreign")
  users_orders_user_idTousers    users            @relation("orders_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "orders_user_id_foreign")

  @@index([classic_course_id], map: "orders_classic_course_id_foreign")
  @@index([inviter_id], map: "orders_inviter_id_foreign")
  @@index([payment_method], map: "orders_payment_method_index")
  @@index([payment_provider], map: "orders_payment_provider_index")
  @@index([pricing_plan_id], map: "orders_pricing_plan_id_foreign")
  @@index([status], map: "orders_status_index")
  @@index([subscription_id], map: "orders_subscription_id_foreign")
  @@index([type], map: "orders_type_index")
  @@index([user_id], map: "orders_user_id_foreign")
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model photos {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  path           String    @db.VarChar(255)
  photoable_type String    @db.VarChar(255)
  photoable_id   BigInt    @db.UnsignedBigInt
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([photoable_type, photoable_id], map: "photos_photoable_type_photoable_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model popular_keywords {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  keyword      String    @db.VarChar(255)
  search_count Int       @default(0)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
  deleted_at   DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pricing_plans {
  id              BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  key             String          @unique(map: "pricing_plans_key_unique") @db.VarChar(255)
  name            String          @db.VarChar(255)
  period_type     String          @db.VarChar(255)
  period_count    Int             @db.UnsignedInt
  original_price  Decimal         @db.Decimal(8, 2)
  discount_price  Decimal         @db.Decimal(8, 2)
  stripe_price_id String?         @db.VarChar(255)
  created_at      DateTime?       @db.Timestamp(0)
  updated_at      DateTime?       @db.Timestamp(0)
  benefits        Json?
  orders          orders[]
  subscriptions   subscriptions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model questions {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @default("") @db.VarChar(255)
  question   String    @default("") @db.VarChar(500)
  answer     String?   @db.Text
  type       String    @default("purchase") @db.VarChar(255)
  sort       Int       @default(0)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model resume_deliveries {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  company_id BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  companies  companies @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "resume_deliveries_company_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "resume_deliveries_user_id_foreign")

  @@index([company_id], map: "resume_deliveries_company_id_foreign")
  @@index([user_id], map: "resume_deliveries_user_id_foreign")
}

model settings {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  group      String    @db.VarChar(255)
  name       String    @db.VarChar(255)
  locked     Boolean   @default(false)
  payload    Json
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)

  @@unique([group, name], map: "settings_group_name_unique")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model site_resume_deliveries {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     BigInt    @default(0)
  company_id  BigInt    @default(0)
  job_id      BigInt    @default(0)
  read_status String    @default("unread") @db.VarChar(255)
  send_time   DateTime? @db.DateTime(0)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  is_top      Boolean   @default(false)
  is_like     Boolean   @default(false)
}

model skill_user_work_experience {
  skill_id                BigInt                @db.UnsignedBigInt
  user_work_experience_id BigInt                @db.UnsignedBigInt
  skills                  skills                @relation(fields: [skill_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "skill_user_work_experience_skill_id_foreign")
  user_work_experiences   user_work_experiences @relation(fields: [user_work_experience_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "skill_user_work_experience_user_work_experience_id_foreign")

  @@id([skill_id, user_work_experience_id])
  @@index([user_work_experience_id], map: "skill_user_work_experience_user_work_experience_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model skills {
  id                         BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  name                       String                       @db.VarChar(255)
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  job_skill                  job_skill[]
  skill_user_work_experience skill_user_work_experience[]

  @@index([name], map: "skills_name_index")
}

model subscription_items {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  subscription_id BigInt    @db.UnsignedBigInt
  stripe_id       String    @unique(map: "subscription_items_stripe_id_unique") @db.VarChar(255)
  stripe_product  String    @db.VarChar(255)
  stripe_price    String    @db.VarChar(255)
  quantity        Int?
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)

  @@index([subscription_id, stripe_price], map: "subscription_items_subscription_id_stripe_price_index")
}

model subscriptions {
  id              BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt        @db.UnsignedBigInt
  pricing_plan_id BigInt        @db.UnsignedBigInt
  name            String        @db.VarChar(255)
  stripe_id       String?       @unique(map: "subscriptions_stripe_id_unique") @db.VarChar(255)
  stripe_status   String?       @db.VarChar(255)
  stripe_price    String?       @db.VarChar(255)
  quantity        Int?
  trial_ends_at   DateTime?     @db.Timestamp(0)
  ends_at         DateTime?     @db.Timestamp(0)
  created_at      DateTime?     @db.Timestamp(0)
  updated_at      DateTime?     @db.Timestamp(0)
  orders          orders[]
  pricing_plans   pricing_plans @relation(fields: [pricing_plan_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "subscriptions_pricing_plan_id_foreign")
  users           users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "subscriptions_user_id_foreign")

  @@index([pricing_plan_id], map: "subscriptions_pricing_plan_id_foreign")
  @@index([user_id, stripe_status], map: "subscriptions_user_id_stripe_status_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model talents {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @default(0) @db.UnsignedBigInt
  show_resume     Boolean   @default(false)
  recommend       Boolean   @default(false)
  finish_percent  Int       @default(0)
  view_num        Int       @default(0)
  last_refresh_at DateTime? @db.Timestamp(0)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  deleted_at      DateTime? @db.Timestamp(0)

  @@index([user_id], map: "idx_user_id")
}

model telescope_entries {
  sequence                BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid                    String                   @unique(map: "telescope_entries_uuid_unique") @db.Char(36)
  batch_id                String                   @db.Char(36)
  family_hash             String?                  @db.VarChar(255)
  should_display_on_index Boolean                  @default(true)
  type                    String                   @db.VarChar(20)
  content                 String                   @db.LongText
  created_at              DateTime?                @db.DateTime(0)
  telescope_entries_tags  telescope_entries_tags[] @ignore

  @@index([batch_id], map: "telescope_entries_batch_id_index")
  @@index([created_at], map: "telescope_entries_created_at_index")
  @@index([family_hash], map: "telescope_entries_family_hash_index")
  @@index([type, should_display_on_index], map: "telescope_entries_type_should_display_on_index_index")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model telescope_entries_tags {
  entry_uuid        String            @db.Char(36)
  tag               String            @db.VarChar(255)
  telescope_entries telescope_entries @relation(fields: [entry_uuid], references: [uuid], onDelete: Cascade, onUpdate: NoAction, map: "telescope_entries_tags_entry_uuid_foreign")

  @@index([entry_uuid, tag], map: "telescope_entries_tags_entry_uuid_tag_index")
  @@index([tag], map: "telescope_entries_tags_tag_index")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model telescope_monitoring {
  tag String @db.VarChar(255)

  @@ignore
}

model translations {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  translatable_type String    @db.VarChar(255)
  translatable_id   BigInt    @db.UnsignedBigInt
  locale            String    @db.VarChar(255)
  column            String    @db.VarChar(255)
  value             String    @db.LongText
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  @@unique([translatable_type, translatable_id, locale, column], map: "translations_unique")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_education_experiences {
  id                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                   BigInt    @db.UnsignedBigInt
  education_background      String?   @db.VarChar(255)
  graduated_from            String?   @db.VarChar(255)
  start_date                String?   @db.VarChar(255)
  end_date                  String?   @db.VarChar(255)
  major                     String?   @db.VarChar(255)
  academic_experience       String?   @db.Text
  social_thesis_title       String?   @db.VarChar(255)
  social_thesis_description String?   @db.Text
  created_at                DateTime? @db.Timestamp(0)
  updated_at                DateTime? @db.Timestamp(0)
  users                     users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_education_experiences_user_id_foreign")

  @@index([education_background], map: "user_education_experiences_education_background_index")
  @@index([user_id], map: "user_education_experiences_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_job_expectations {
  id              BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt         @db.UnsignedBigInt
  job_position_id BigInt?        @db.UnsignedBigInt
  job_type        String         @db.VarChar(255)
  city            String         @db.VarChar(255)
  resident_city   String         @default("") @db.VarChar(255)
  purpose         String?        @db.VarChar(255)
  created_at      DateTime?      @db.Timestamp(0)
  updated_at      DateTime?      @db.Timestamp(0)
  deleted_at      DateTime?      @db.Timestamp(0)
  job_positions   job_positions? @relation(fields: [job_position_id], references: [id], onUpdate: NoAction, map: "user_job_expectations_job_position_id_foreign")
  users           users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_job_expectations_user_id_foreign")

  @@index([job_position_id], map: "user_job_expectations_job_position_id_foreign")
  @@index([job_type], map: "user_job_expectations_job_type_index")
  @@index([user_id], map: "user_job_expectations_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_profiles {
  id            BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id       BigInt    @db.UnsignedBigInt
  avatar        String?   @db.VarChar(255)
  name          String?   @db.VarChar(255)
  gender        String?   @db.VarChar(255)
  date_of_birth DateTime? @db.Date
  identity      String?   @db.VarChar(255)
  visa_type     String?   @db.VarChar(255)
  city          String    @default("") @db.VarChar(255)
  work_start_at DateTime? @db.Date
  work_year     Float     @default(0.0)
  strength      String?   @db.LongText
  email         String?   @unique(map: "user_profiles_email_unique") @db.VarChar(255)
  phone_code    String?   @db.VarChar(255)
  phone_number  String?   @db.VarChar(255)
  resume_file   String?   @db.VarChar(255)
  skills        Json?
  fill_status   String    @default("wait_fill") @db.VarChar(255)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_profiles_user_id_foreign")

  @@unique([phone_code, phone_number], map: "user_profiles_phone_code_phone_number_unique")
  @@index([avatar], map: "user_profiles_avatar_index")
  @@index([gender], map: "user_profiles_gender_index")
  @@index([identity], map: "user_profiles_identity_index")
  @@index([name], map: "user_profiles_name_index")
  @@index([phone_number], map: "user_profiles_phone_number_index")
  @@index([user_id], map: "user_profiles_user_id_foreign")
  @@index([visa_type], map: "user_profiles_visa_type_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_project_experiences {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id         BigInt    @db.UnsignedBigInt
  project_name    String?   @db.VarChar(255)
  job_position_id Int?      @db.UnsignedInt
  link            String?   @db.VarChar(255)
  start_date      DateTime? @db.Date
  end_date        DateTime? @db.Date
  description     String?   @db.Text
  performance     String?   @db.Text
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_project_experiences_user_id_foreign")

  @@index([user_id], map: "user_project_experiences_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_work_experiences {
  id                         BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                    BigInt                       @db.UnsignedBigInt
  industry_id                BigInt?                      @db.UnsignedBigInt
  company_name               String?                      @db.VarChar(255)
  job_position_id            Int?                         @db.UnsignedInt
  department                 String?                      @db.VarChar(255)
  start_date                 DateTime?                    @db.Date
  end_date                   DateTime?                    @db.Date
  duties                     String?                      @db.Text
  performance                String?                      @db.Text
  is_internship              Boolean?
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  skill_user_work_experience skill_user_work_experience[]
  industries                 industries?                  @relation(fields: [industry_id], references: [id], onUpdate: NoAction, map: "user_work_experiences_industry_id_foreign")
  users                      users                        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "user_work_experiences_user_id_foreign")

  @@index([industry_id], map: "user_work_experiences_industry_id_foreign")
  @@index([user_id], map: "user_work_experiences_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id                                  BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  inviter_id                          BigInt?                      @db.UnsignedBigInt
  role                                String                       @db.VarChar(255)
  email                               String?                      @unique(map: "users_email_unique") @db.VarChar(255)
  phone_code                          String?                      @db.VarChar(255)
  phone_number                        String?                      @db.VarChar(255)
  password                            String                       @db.VarChar(255)
  hash_id                             String?                      @db.VarChar(255)
  remember_token                      String?                      @db.VarChar(100)
  show_resume                         Boolean                      @default(true)
  online_at                           DateTime?                    @db.Timestamp(0)
  created_at                          DateTime?                    @db.Timestamp(0)
  updated_at                          DateTime?                    @db.Timestamp(0)
  stripe_id                           String?                      @db.VarChar(255)
  pm_type                             String?                      @db.VarChar(255)
  pm_last_four                        String?                      @db.VarChar(4)
  trial_ends_at                       DateTime?                    @db.Timestamp(0)
  source                              String                       @default("register") @db.VarChar(255)
  balances_balances_invited_idTousers balances[]                   @relation("balances_invited_idTousers")
  balances_balances_user_idTousers    balances[]                   @relation("balances_user_idTousers")
  channels_channels_user1_idTousers   channels[]                   @relation("channels_user1_idTousers")
  channels_channels_user2_idTousers   channels[]                   @relation("channels_user2_idTousers")
  companies                           companies[]
  contacts                            contacts[]
  distribution_settings               distribution_settings?
  enrollments                         enrollments[]
  interviews                          interviews[]
  orders_orders_inviter_idTousers     orders[]                     @relation("orders_inviter_idTousers")
  orders_orders_user_idTousers        orders[]                     @relation("orders_user_idTousers")
  resume_deliveries                   resume_deliveries[]
  subscriptions                       subscriptions[]
  user_education_experiences          user_education_experiences[]
  user_job_expectations               user_job_expectations[]
  user_profiles                       user_profiles[]
  user_project_experiences            user_project_experiences[]
  user_work_experiences               user_work_experiences[]
  withdrawal_accounts                 withdrawal_accounts[]
  withdrawal_requests                 withdrawal_requests[]

  @@unique([phone_code, phone_number], map: "users_phone_code_phone_number_unique")
  @@index([phone_number], map: "users_phone_number_index")
  @@index([role], map: "users_role_index")
  @@index([stripe_id], map: "users_stripe_id_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model video_courses {
  id           BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  mentor_id    BigInt?     @db.UnsignedBigInt
  industry_id  BigInt?     @db.UnsignedBigInt
  title        String      @db.VarChar(255)
  description  String      @db.LongText
  views        BigInt      @default(0) @db.UnsignedBigInt
  video        String      @db.VarChar(255)
  type         String      @db.VarChar(255)
  status       String      @db.VarChar(255)
  cover        String      @db.VarChar(255)
  published_at DateTime?   @db.Timestamp(0)
  created_at   DateTime?   @db.Timestamp(0)
  updated_at   DateTime?   @db.Timestamp(0)
  industries   industries? @relation(fields: [industry_id], references: [id], onUpdate: NoAction, map: "video_courses_industry_id_foreign")
  mentors      mentors?    @relation(fields: [mentor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "video_courses_mentor_id_foreign")

  @@index([industry_id], map: "video_courses_industry_id_foreign")
  @@index([mentor_id], map: "video_courses_mentor_id_foreign")
  @@index([published_at], map: "video_courses_published_at_index")
  @@index([status], map: "video_courses_status_index")
  @@index([title], map: "video_courses_title_index")
  @@index([type], map: "video_courses_type_index")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model withdrawal_accounts {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  country        String    @default("") @db.VarChar(255)
  user_id        BigInt    @db.UnsignedBigInt
  bank_name      String    @db.VarChar(255)
  bank_branch    String?   @db.VarChar(255)
  account_name   String    @db.VarChar(255)
  account_number String    @db.VarChar(255)
  bsb            String    @default("") @db.VarChar(255)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
  users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "withdrawal_accounts_user_id_foreign")

  @@index([user_id], map: "withdrawal_accounts_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model withdrawal_requests {
  id                    BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  user_id               BigInt     @db.UnsignedBigInt
  country               String     @default("") @db.VarChar(255)
  withdrawal_account_id BigInt     @default(0) @db.UnsignedBigInt
  order_no              String     @db.VarChar(255)
  status                String     @default("reviewing") @db.VarChar(255)
  amount                Decimal    @db.Decimal(8, 2)
  bank_name             String?    @db.VarChar(255)
  bank_branch           String?    @db.VarChar(255)
  account_name          String?    @db.VarChar(255)
  account_number        String?    @db.VarChar(255)
  bsb                   String     @default("") @db.VarChar(255)
  created_at            DateTime?  @db.Timestamp(0)
  updated_at            DateTime?  @db.Timestamp(0)
  deleted_at            DateTime?  @db.Timestamp(0)
  balances              balances[]
  users                 users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "withdrawal_requests_user_id_foreign")

  @@index([user_id], map: "withdrawal_requests_user_id_foreign")
}
